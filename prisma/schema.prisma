generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Location {
  location_id          Int           @id @default(autoincrement())
  location_name        String        @unique
  jetski_location_list Jetski[]
  reservations_list    Reservation[]
  user_location_list   User[]
}

model User {
  user_id          String     @id @default(cuid())
  name             String?
  email            String?    @unique
  password         String?
  user_status      UserStatus @default(EMPLOYED)
  user_role        UserRole   @default(GUEST)
  user_location_id Int?
  user_location    Location?  @relation(fields: [user_location_id], references: [location_id])
}

model Jetski {
  jetski_id                Int           @id @default(autoincrement())
  jetski_registration      String        @unique
  jetski_model             String
  jetski_topSpeed          Int
  jetski_kW                Int
  jetski_manufacturingYear Int
  jetski_status            statusJetski  @default(AVAILABLE)
  jetski_location_id       Int?
  jetski_location          Location?     @relation(fields: [jetski_location_id], references: [location_id])
  jetski_reservations      Reservation[] @relation("JetskiToReservation")
}

model Reservation {
  reservation_id          Int      @id @default(autoincrement())
  startTime               DateTime
  endTime                 DateTime
  jetskiCount             Int
  safariTour              Boolean
  createdAt               DateTime @default(now())
  reservationOwner        String
  contactNumber           String
  totalPrice              Float
  discount                Float
  reservation_location_id Int
  reservation_location    Location @relation(fields: [reservation_location_id], references: [location_id])
  reservation_jetski_list Jetski[] @relation("JetskiToReservation")
}

model RentalOptions {
  rentaloption_id          Int    @id @default(autoincrement())
  rentaloption_description String
  duration                 Int    @unique
  rentalprice              Float
}

enum rentalOptionType {
  SAFARI
  REGULAR_TOUR
  NONE
}

enum statusJetski {
  AVAILABLE
  NOT_AVAILABLE
  OUT_OF_FUEL
  NOT_IN_FLEET
}

enum UserStatus {
  EMPLOYED
  VACATION
  NOT_EMPLOYED
}

enum UserRole {
  ADMIN
  MODERATOR
  USER
  GUEST
}
